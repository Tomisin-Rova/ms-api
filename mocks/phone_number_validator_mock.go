// Code generated by MockGen. DO NOT EDIT.
// Source: ./libs/validator/phonenumbervalidator/phone_number_validator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPhoneNumberValidator is a mock of PhoneNumberValidator interface.
type MockPhoneNumberValidator struct {
	ctrl     *gomock.Controller
	recorder *MockPhoneNumberValidatorMockRecorder
}

// MockPhoneNumberValidatorMockRecorder is the mock recorder for MockPhoneNumberValidator.
type MockPhoneNumberValidatorMockRecorder struct {
	mock *MockPhoneNumberValidator
}

// NewMockPhoneNumberValidator creates a new mock instance.
func NewMockPhoneNumberValidator(ctrl *gomock.Controller) *MockPhoneNumberValidator {
	mock := &MockPhoneNumberValidator{ctrl: ctrl}
	mock.recorder = &MockPhoneNumberValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhoneNumberValidator) EXPECT() *MockPhoneNumberValidatorMockRecorder {
	return m.recorder
}

// ValidatePhoneNumber mocks base method.
func (m *MockPhoneNumberValidator) ValidatePhoneNumber(phoneNumber string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatePhoneNumber", phoneNumber)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidatePhoneNumber indicates an expected call of ValidatePhoneNumber.
func (mr *MockPhoneNumberValidatorMockRecorder) ValidatePhoneNumber(phoneNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatePhoneNumber", reflect.TypeOf((*MockPhoneNumberValidator)(nil).ValidatePhoneNumber), phoneNumber)
}
