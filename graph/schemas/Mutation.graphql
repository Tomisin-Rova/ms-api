type Mutation {
    resetPasscode(
        email: String!
        newPasscode: String!
        verificationToken: String!
    ): Result
    confirmPasscodeResetDetails(
        email: String!
        dob: String!
        address: InputAddress!
    ): Result
    confirmPasscodeResetOtp(
        email: String!
        otp: String!
    ): Result

    updatePersonBiodata(input: UpdateBioDataInput) : Result

    addReasonsForUsingRoava(
        reasonValues: [String]
    ) : Result

    # onboarding
    createPhone(phone: String!, device: DeviceInput!): Response!
    confirmPhone(token: String!, code: String!): Response!
    """
    Creates person's ROAVA login credentials (email, login)
    """
    signup(token: String!, email: String!, passcode: String!): AuthResponse!

#    createPhone(input: CreatePhoneInput!): CreatePhoneResult
#    verifyOtp(token: String!, code: String!): Result
#    createPerson(input: CreatePersonInput): AuthResult
    login(credentials: AuthInput!, biometric: Boolean): AuthResponse!
    refreshToken(token: String!): AuthResponse!
    setBiometricAuth(activate: Boolean): Response!
    resendOtp(phone: String!): Result
    verifyEmail(email: String!, token: String!): Result
    resendEmailMagicLInk(email: String!): Result
    submitApplication: Result
    acceptTermsAndConditions: Result
    createApplication: createApplicationResponse
    createCurrencyAccount(currencyCode: String!): Result
    updateFirebaseToken(token: String!): Result
    createTransactionPin(pin: String!): Result
    makeTransfer(input: MakeTransferInput): Result
    createPayee(input: CreatePayeeInput!): CreatePayeeResult
}


# I N T E R F A C E S

# API response interface
interface GraphQLResponse {
    message: String
    success: Boolean
    code: Int
}

# T Y P E S

type Response implements GraphQLResponse {
    message: String!
    success: Boolean!
    code: Int
    token: String
}

input AuthInput {
    email: String!
    passcode: String!
    device: DeviceInput
}

input DeviceInput {
    identifier: String!
    brand: String!
    os: String!
    tokens: DeviceTokenInput!
}

input DeviceTokenInput {
    firebase: String!
}

type AuthResponse implements GraphQLResponse {
    message: String!
    success: Boolean!
    code: Int
    tokens: AuthTokens!
}

type AuthTokens {
    jwt: String!
    refresh: String!
}
