syntax = "proto3";
package types;
option go_package = "ms.api/protos/pb/types";

import "google/protobuf/any.proto";

// GraphQL API response
message Response {
  string message = 1;
  bool success = 2;
  int32 code = 3;
  string token = 4;
}

// Person type
message Person {
  string id = 1;
  string title = 2;
  string first_name = 3;
  string last_name = 4;
  string middle_name = 5;
  repeated PhoneNumber phones = 6;
  repeated Email emails = 7;
  string dob = 8;
  string country_residence = 9;
  repeated string nationality = 10;
  repeated Address addresses = 11;
  string employer = 12;
  repeated Identity identities = 13;
  int64 ts = 14;
  Cdd cdd = 15;
  repeated Activity activities = 16;
}

// Persons type
message Persons {
  repeated Person persons = 1;
}

// Address type
message Address {
  string flat_number = 1;
  string building_number = 2;
  string building_name = 3;
  string street = 4;
  string sub_street = 5;
  string city = 6;
  string state = 7;
  string postcode = 8;
  string country = 9;
}

// Device type
message Device {
  string identifier = 1;
  string brand = 2;
  string os = 3;
}

// Email type
message Email {
  string Value = 1;
  bool Verified = 2;
}

// PhoneNumber type
message PhoneNumber {
  string Number = 1;
  bool Verified = 2;
}

// Cdd type
message Cdd {
  string id = 1;
  string owner = 2;
  bool watchlist = 3;
  string status = 4;
  bool onboard = 5;
  repeated Validation validations = 6;
  int32 ts = 7;
}

// Validation type
message Validation {
  string id = 1;
  string validation_type = 2;
  string applicant = 3;
  google.protobuf.Any data = 4;
  string status = 5;
  bool approved = 6;
  int32 ts = 7;
}

// Kyc type
message Kyc {
  string id = 1;
  Applicant applicant = 2;
  string status = 3;
  string vendor = 4;
  string created_at = 5;
  string updated_at = 6;
}


message Aml {
  string created_at = 1;
  string updated_at = 2;
  string title = 3;
  string person_id = 4;
  string first_name = 5;
  string last_name = 6;
  string middle_name = 7;
  string date_of_birth = 8;
  string email = 9;
  string nationality = 10;
  google.protobuf.Any reports = 11; // Excluded from customers on the public graph.
  string status = 12;
}

// Roava type
message Roava {}

// Cra type
message Cra {}

message Applicant {
  string application_id = 1;
  string applicant_id = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string dob = 6;
  Address address = 7;
  string vendor = 8;
}

// Country type
message Country {
  string countryId = 1;
  string capital = 2;
  string countryName = 3;
  string continent = 4;
  string dial = 5;
  string geoNameId = 6;
  string ISO4217CurrencyAlphabeticCode = 7;
  int32 ISO4217CurrencyNumericCode = 8;
  string isIndependent = 9;
  string languages = 10;
  string officialNameEnglish = 11;
  string deviceId = 12;
}

// Payee type
message Payee {
  string id = 1;
  string owner = 2;
  string name = 3;
  string avatar = 4;
  repeated payeeAccount accounts = 5;
  int64 ts = 6;
}

message payeeAccount {
  string id = 1;
  string name = 2;
  string currency = 3;
  string accountNumber = 4;
  string sortCode = 5;
  string iban = 6;
  string swiftBic = 7;
  string bankCode = 8;
  string routingNumber = 9;
  string phoneNumber = 10;
}

// Payees type
message Payees {
  repeated Payee payee = 1;
}

// Account type
message Account {
  string accountName = 1;
  string accountNumber = 2;
  string sortCode = 3;
  string bankCode = 4;
  string routingNumber = 5;
  string BIC = 6;
  string IBAN = 7;
  string country = 8;
  string bankName = 9;
  string routingType = 10;
  string shortCode = 11;
  string balance = 12;
  string currencyCode = 13;
  string currencySymbol = 14;
}

// Identity type
message Identity {
  string id = 1;
  string owner = 2;
  string nickname = 3;
  Organisation organisation = 4;
  string status = 5;
  bool active = 6;
  bool authentication = 7;
  repeated Device devices = 8;
  Credentials credentials = 9;
  int64 ts = 10;
}

// Credentials type
message Credentials {
  string identifier = 1;
  string refresh_token = 2;
}

// Organisation type
message Organisation {
  string id = 1;
  string name = 2;
  string keywords = 3;
  string description = 4;
  string domain = 5;
  string banner = 6;
  float revenue = 7;
  string language = 8;
  float raised = 9;
  string employees = 10;
  string email = 11;
  repeated Address addresses = 12;
  OrgLocation location = 13;
  repeated Industry industries = 14;
  Social social = 15;
  repeated ImageAssets image_assets = 16;
  repeated Identity identities = 17;
}

// OrgLocation type
message OrgLocation {
  string continent = 1;
  string country = 2;
  string state = 3;
  string city = 4;
  string country_code = 5;
}

// Industry type
message Industry {
  string id = 1;
  int64 code = 2;
  float score = 3;
  string  section = 4;
  string description = 5;
  string source = 6;
}

// Social type
message Social {
  string youtube = 1;
  string github = 2;
  string facebook = 3;
  string pinterest = 4;
  string instagram = 5;
  string linkedin = 6;
  string medium = 7;
  string crunchbase = 8;
  string twitter = 9;
}

// ImageAssets type
message ImageAssets {
  bool safe = 1;
  string type = 2;
  string image = 3;
  string svg = 4;
}

// AddressLookup type
message AddressLookup {
  string addressline1 = 1;
  string addressline2 = 2;
  string summaryline = 3;
  string organisation = 4;
  string buildingname = 5;
  string premise = 6;
  string street = 7;
  string dependentlocality = 8;
  string posttown = 9;
  string county = 10;
  string postcode = 11;
  string latitude = 12;
  string longitude = 13;
  string grideasting = 14;
  string gridnorthing = 15;
}

// Activity type
message Activity {
	string id = 1;
	string description = 2;   
	int64 risk_weighting = 3;  
	bool supported = 4;
	int64 archived = 5;
	int64 ts = 6;
}

// Product type
message ProductInput {
  string id = 1;
  string identification = 2;
  string scheme = 3;
}

// AccountData type
message AccountData {
  string accountHolderKey =1;
  string accountHolderType =2;
  string accountState =3;
  string accountType =4;
  AccruedAmounts accruedAmounts =5;
  int32 activationDate =6;
  int32 approvedDate = 7;
  string assignedBranchKey =8;
  string assignedCentreKey =9;
  string assignedUserKey =10;
  Balances balances = 11;
  string closedDate = 12;
  string creationDate = 13;
  string creditArrangementKey =14;
  string currencyCode =15;
  string encodedKey =16;
  string id =17;
  InterestSettings interestSettings =18;
  InternalControls internalControls =19;
  string lastAccountAppraisalDate =20;
  string lastInterestCalculationDate =21;
  string lastInterestStoredDate = 22;
  string lastModifiedDate =23;
  string lastOverdraftInterestReviewDate = 24;
  string lastSetToArrearsDate = 25;
  repeated string linkedSettlementAccountKeys =26;
  string lockedDate = 27;
  string maturityDate =28;
  string migrationEventKey = 29;
  string name =30;
  string notes =31;
  OverdraftInterestSettings overdraftInterestSettings =32;
  OverdraftSettings overdraftSettings = 33;
  string productTypeKey =34;
  string withholdingTaxSourceKey =35;
}

// AccruedAmounts type
message AccruedAmounts  {
  int32 interestAccrued = 1;
  int32 overdraftInterestAccrued = 2;
  int32 technicalOverdraftInterestAccrued = 3;
}

// Balances type
message Balances {
  int32 availableBalance =1;
  int32 blockedBalance =2;
  int32 feesDue =3;
  int32 forwardAvailableBalance =4;
  int32 holdBalance =5;
  int32 lockedBalance =6;
  int32 overdraftAmount =7;
  int32 overdraftInterestDue =8;
  int32 technicalOverdraftAmount =9;
  int32 technicalOverdraftInterestDue =10;
  int32 totalBalance =11;
}

// InterestSettings type
message InterestSettings {
  InterestPaymentSettings interestPaymentSettings =1;
  InterestRateSettings interestRateSettings=2;
}

// InterestPaymentSettings type
message InterestPaymentSettings {
  repeated InterestPaymentDate interestPaymentDates =1;
  string interestPaymentPoint =2;
}

// InterestPaymentDate type
message InterestPaymentDate {
  int32 day =1;
  int32 month =2;
}

// InternalControls type
message InternalControls {
  int32 maxWithdrawalAmount =1;
  int32 recommendedDepositAmount =2;
  int32 targetAmount =3;
}

// OverdraftInterestSettings type
message OverdraftInterestSettings {
  InterestRateSettings interestRateSettings =1;
}

// InterestRateSettings type
message InterestRateSettings {
  string encodedKey =1;
  string interestChargeFrequency =2;
  int32 interestChargeFrequencyCount =3;
  int32 interestRate =4;
  int32 interestRateReviewCount =5;
  string interestRateReviewUnit =6;
  string interestRateSource =7;
  string interestRateTerms =8;
  repeated InterestRateTier interestRateTiers =9;
  int32 interestSpread =10;
}

// OverdraftSettings type
message OverdraftSettings {
  bool allowOverdraft =1;
  int32 overdraftExpiryDate =2;
  int32 overdraftLimit =3;
}

// InterestRateTier type
message InterestRateTier {
  string encodedKey=1;
  int32 endingBalance =2;
  int32 endingDay =3;
  int32 interestRate =4;
}

// Transaction type
message Transaction {
  string id = 1;
  string account =2;
  int32 ts =3;
  TransactionData transactionData =4;
}

// TransactionData type
message TransactionData {
  AccountBalances accountBalances =1;
  AffectedAmounts affectedAmounts=2;
  int32 amount=3;
  string bookingDate  =4;
  string creationDate =5;
  string currencyCode=6;
  string encodedKey=7;
  string externalID=8;
  string fees =9;
  string id =10;
  string notes =11;
  string parentAccountKey =12;
  string paymentOrderID =13;
  Taxes taxes =14;
  Terms terms=15;
  TransactionDetails transactionDetails=16;
  TransferDetails transferDetails =17;
  string type=18;
  string userKey =19;
  string valueDate =20;
}

// AccountBalances type
message AccountBalances  {
  int32 totalBalance =1;
}

// AffectedAmounts type
message AffectedAmounts {
  int32 feesAmount =1;
  int32 fractionAmount  =2;
  int32 fundsAmount  =3;
  int32 interestAmount =4;
  int32 overdraftAmount =5;
  int32 overdraftFeesAmount  =6;
  int32 overdraftInterestAmount  =7;
  int32 technicalOverdraftAmount =8;
  int32 technicalOverdraftInterestAmount  =9;
}

// Taxes type
message Taxes {
}

// TransferDetails type
message TransferDetails {
  string linkedLoanTransactionKey =1;
}

// TransactionDetails type
message TransactionDetails {
}

// Terms type
message Terms {
  google.protobuf.Any interestSettings =1;
  google.protobuf.Any overdraftInterestSettings =2;
  google.protobuf.Any overdraftSettings =3;
}