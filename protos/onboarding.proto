syntax = "proto3";

package onboarding;

import "types.proto";
import "google/protobuf/timestamp.proto";
option go_package = "ms.api/protos/pb/onboarding";

message SubmitCDDRequest {
  KYCInput kyc = 1;
  bool aml = 2;
  POAInput poa = 3;
}

message KYCInput {
  repeated types.Reports.KYCTypes report_types = 1;
}

message POAInput {
  string data = 1;
}

message RequestResubmitRequest {
  string customer_id = 1;
  repeated string report_ids = 2;
  string message = 3;
}

message UpdateKYCStatusRequest {
  string id = 1;
  types.KYC.KYCStatuses status = 2;
  string message = 3;
}

message UpdateAMLStatusRequest {
  string id = 1;
  types.AML.AMLStatuses status = 2;
  string message = 3;
}

message GetOnfidoSDKTokenRequest {}

message GetOnfidoSDKTokenResponse {
  string token = 1;
}

message GetCDDRequest {
  string id = 1;
}

message GetCDDsRequest {
  int32 first = 1;
  string after = 2;
  int32 last = 3;
  string before = 4;
  repeated types.CDD.CDDStatuses statuses = 5;
}

message GetCDDsResponse {
  repeated types.CDD nodes = 1;
  types.PaginationInfo pagination_info = 2;
  int32 total_count = 3;
}

service OnboardingService {
  rpc SubmitCDD(SubmitCDDRequest) returns (types.DefaultResponse);
  rpc GetOnfidoSDKToken(GetOnfidoSDKTokenRequest) returns (GetOnfidoSDKTokenResponse);
  rpc GetCDD(GetCDDRequest) returns (types.CDD);
  rpc GetCDDs(GetCDDsRequest) returns (GetCDDsResponse);

  // Dashboard
  rpc RequestResubmit(RequestResubmitRequest) returns (types.DefaultResponse);
  rpc UpdateKYCStatus(UpdateKYCStatusRequest) returns (types.DefaultResponse);
  rpc UpdateAMLStatus(UpdateAMLStatusRequest) returns (types.DefaultResponse);
}

