syntax = "proto3";
package onboarding;
option go_package = "ms.api/protos/pb/onboardingService";

// Import types
import "types.proto";

message CreatePhoneRequest {
  string phoneNumber = 1;
  types.Device device = 2;
}

message InputAddress {
  string country = 1;
  string street = 2;
  string city = 3;
  string postcode = 4;
  string country2 = 5;
  string state = 6;
  string county = 7;
}

message CreatePhoneResponse {
  string message = 1;
  string token = 2;
}

message CreatePersonRequest {
  string email = 1;
  string passcode = 2;
  string token = 3;
}

message CreatePersonResponse {
  string jwtToken = 1;
  string refreshToken = 2;
  string message = 3;
}

message UpdatePersonRequest {
  string personId = 1;
  InputAddress address = 2;
  string firstName = 3;
  string lastName = 4;
  string dob = 5;
  string countryResidence = 6;
  string bvn = 7;
}

message RoavaReasonsRequest {
  string personId = 1;
  repeated string reasons = 2;
}

message CheckEmailExistenceRequest {
  string email = 1;
}

message CheckEmailExistenceResponse {
  bool exists = 1;
  string message = 2;
}

message OtpVerificationResponse {
  bool match = 1;
  string message = 2;
}

message OtpVerificationRequest {
  string token = 1;
  string code = 2;
}

message ResendOtpRequest {
  string phone = 1;
}

message CreateOnfidoApplicantRequest {
  string personId = 1;
}

message CreateOnfidoApplicantResponse {
  string token = 1;
}

message GetOnfidoSDKTokenRequest {
  string personId = 1;
}

message GetOnfidoSDKTokenResponse {
  string token = 1;
}

message SubmitCheckRequest {
  string personId = 1;
}

message VerifyEmailMagicLInkRequest {
  string email = 1;
  string verificationToken = 2;
}

message ResendEmailMagicLInkRequest {
  string email = 1;
}

message FetchCountriesRequest {}


message FetchCountriesResponse {
  repeated types.Country Countries = 2;
}

message FetchReasonsRequest {
  bool supported = 1;
}


message Reasons {
  string Id = 1;
  string Description = 2;
}

message ReasonResponse {
  repeated Reasons reasons = 1;
}

message EmptyRequest{}
message TermsAndConditionsRequest {
  string personId = 1;
}

message UpdateFirebaseTokenRequest {
  string personId = 1;
  string token = 2;
}

message AddressLookupRequest {
  string text = 1;
}

message AddressLookupResponse {
  repeated types.AddressLookup addresses = 1;
}

service OnBoardingService{
  rpc CreatePhone(CreatePhoneRequest) returns (CreatePhoneResponse) {}
  rpc CreatePerson(CreatePersonRequest) returns (CreatePersonResponse) {}
  rpc UpdatePersonBiodata(UpdatePersonRequest) returns (types.Person) {}
  rpc AddReasonsForUsingRoava(RoavaReasonsRequest) returns (types.Response) {}
  rpc CheckEmailExistence(CheckEmailExistenceRequest) returns (CheckEmailExistenceResponse) {}
  rpc VerifySmsOtp(OtpVerificationRequest) returns (OtpVerificationResponse) {}
  rpc ResendOtp(ResendOtpRequest) returns (types.Response) {}
  rpc CreateOnfidoApplicant(CreateOnfidoApplicantRequest) returns (CreateOnfidoApplicantResponse) {}
  rpc GetOnfidoSDKToken(GetOnfidoSDKTokenRequest) returns (GetOnfidoSDKTokenResponse) {}
  rpc SubmitCheck(SubmitCheckRequest) returns (types.Response) {}
  rpc VerifyEmailMagicLInk(VerifyEmailMagicLInkRequest) returns (types.Response) {}
  rpc ResendEmailMagicLInk(ResendEmailMagicLInkRequest) returns (types.Response) {}
  rpc FetchCountries(FetchCountriesRequest) returns (FetchCountriesResponse) {}
  rpc FetchReasons(FetchReasonsRequest) returns (ReasonResponse) {}
  rpc AcceptTermsAndConditions(TermsAndConditionsRequest) returns (types.Response) {}
  rpc UpdateFirebaseToken(UpdateFirebaseTokenRequest) returns (types.Response) {}
  rpc AddressLookup(AddressLookupRequest) returns (AddressLookupResponse) {}
}
