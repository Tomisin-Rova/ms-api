syntax = "proto3";

package onboarding;
option go_package = "pb/onboardingService";


message CreatePhoneRequest {
    string phoneNumber = 1;
    Device device = 2;
}

message Device {
    string os = 1;
    string brand = 2;
    string deviceToken = 3;
    string deviceId = 4;
}

message SuccessResponse {
    string message = 1;
}

message CreatePhoneResponse {
    string message = 1;
    string token = 2;
}

message CreatePasscodeRequest {
    string passcode = 1;
    string token = 2;
}

message CreateEmailRequest {
   string email = 1;
   string passcode = 2;
   string token = 3;
}

message CreateEmailResponse {
    string personId = 1;
    string message = 2;
}

message UpdatePersonRequest {
    string personId = 1;
    Address address = 2;
    string firstName =3;
    string lastName =4;
    string dob = 5;
}

message RoavaReasonsRequest {
    string personId = 1;
    repeated string reasons = 2;
}

message Address {
    string country = 1;
    string street = 2;
    string city = 3;
    string postcode = 4;
}

message CheckEmailExistenceRequest {
    string email = 1;
}

message CheckEmailExistenceResponse {
    bool exists = 1;
    string message = 2;
}


message OtpVerificationResponse {
    bool match = 1;
    string message = 2;
}

message OtpVerificationRequest {
    string phone = 1;
    string code = 2;
}

message OtpVerificationByEmailRequest {
    string email = 1;
    string code = 2;
}

message ResendOtpRequest {
    string phone = 1;
}

service OnBoardingService {
    rpc CreatePhone(CreatePhoneRequest) returns (CreatePhoneResponse) {}
    rpc CreateEmail(CreateEmailRequest) returns (CreateEmailResponse) {}
    rpc CreatePasscode(CreatePasscodeRequest) returns (SuccessResponse) {}
    rpc UpdatePersonBiodata(UpdatePersonRequest) returns (SuccessResponse) {}
    rpc AddReasonsForUsingRoava(RoavaReasonsRequest) returns (SuccessResponse) {}
    rpc CheckEmailExistence(CheckEmailExistenceRequest) returns (CheckEmailExistenceResponse) {}
    rpc VerifySmsOtp(OtpVerificationRequest) returns (OtpVerificationResponse) {}
    rpc VerifyEmailOtp(OtpVerificationByEmailRequest) returns (OtpVerificationResponse) {}
    rpc ResendOtp(ResendOtpRequest) returns (SuccessResponse) {}
}
