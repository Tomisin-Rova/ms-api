syntax = "proto3";

package payment;

import "types.proto";
import "google/protobuf/timestamp.proto";
option go_package = "protos/pb/payment";

message CreateBeneficiaryRequest {
  BeneficiaryInput beneficiary = 1;
  string transaction_password = 2;
}

message BeneficiaryInput {
  string name = 1;
  BeneficiaryAccountInput account = 2;
}

message BeneficiaryAccountInput {
  string name = 1;
  string currency_id = 2;
  string account_number = 3;
  string code = 4;
}

message AddBeneficiaryAccountRequest {
  BeneficiaryAccountInput account = 1;
  string transaction_password = 2;
}

message DeleteBeneficiaryAccountRequest {
  string beneficiary_id = 1;
  string account_id = 2;
  string transaction_password = 3;
}

message CreateTransferRequest {
  TransactionInput tranfer = 1;
  string transaction_password = 2;
}

message TransactionInput {
  string transaction_type_id = 1;
  string reference = 2;
  repeated string fee_ids = 3;
  string exchange_rate_id = 4;
  float amount = 5;
  string source_account_id = 6;
  string target_account_id = 7;
  string idempotency_key = 8;
}

message GetTransactionRequest {
  string id = 1;
}

message GetTransactionsRequest {
  int32 first = 1;
  string after = 2;
  int32 last = 3;
  string before = 4;
  repeated types.Transaction.TransactionStatuses statuses = 5;
  repeated string account_ids = 6;
  repeated string beneficiary_ids = 7;
}

message GetTransactionsResponse {
  repeated types.Transaction nodes = 1;
  types.PaginationInfo pagination_info = 2;
  int32 total_count = 3;
}

message GetBeneficiaryRequest {
  string id = 1;
}

message GetBeneficiariesRequest {
  string keywords = 1;
  int32 first = 2;
  string after = 3;
  int32 last = 4;
  string before = 5;
  repeated types.Beneficiary.BeneficiaryStatuses statuses = 6;
}

message GetBeneficiariesResponse {
  repeated types.Beneficiary nodes = 1;
  types.PaginationInfo pagination_info = 2;
  int32 total_count = 3;
}

message GetTransactionTypesRequest {
  int32 first = 2;
  string after = 3;
  int32 last = 4;
  string before = 5;
  repeated types.TransactionType.TransactionTypeStatuses statuses = 6;
}

message GetTransactionTypesResponse {
  repeated types.TransactionType nodes = 1;
  types.PaginationInfo pagination_info = 2;
  int32 total_count = 3;
}

service PaymentService {
  rpc CreateBeneficiary(CreateBeneficiaryRequest) returns (types.Beneficiary);
  rpc AddBeneficiaryAccount(AddBeneficiaryAccountRequest) returns (types.BeneficiaryAccount);
  rpc DeleteBeneficiaryAccount(DeleteBeneficiaryAccountRequest) returns (types.DefaultResponse);
  rpc GetBeneficiary(GetBeneficiaryRequest) returns (types.Beneficiary);
  rpc GetBeneficiaries(GetBeneficiariesRequest) returns (GetBeneficiariesResponse);
  rpc CreateTransfer(CreateTransferRequest) returns (types.Transaction);
  rpc GetTransaction(GetTransactionRequest) returns (types.Transaction);
  rpc GetTransactions(GetTransactionsRequest) returns (GetTransactionsResponse);
  rpc GetTransactionTypes(GetTransactionTypesRequest) returns (GetTransactionTypesResponse);
}