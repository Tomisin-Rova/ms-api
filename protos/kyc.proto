syntax = "proto3";
package kyc;
option go_package = "kycService";

service KycService {
  rpc getKycApplicantByPersonId(PersonIdRequest) returns(applicant){}
  rpc submitKycApplicationByPersonId(PersonIdRequest) returns(void){}
  rpc awaitCDDReport(PersonIdRequest) returns(stream cdd){}
}

message void {}


message PersonIdRequest {
  string person_id = 1;
}


message cdd {
  string id = 1;
  string owner = 2;
  string details = 3;
  string status = 4;
  kyc kyc = 5;
  aml aml = 6;
  roava roava = 7;
  int64 time_created = 8;
  int64 time_updated = 9;
}


message kyc {
  string id = 1;
  applicant applicant = 2;
  string status = 3;
  string vendor = 4;
  int64 time_created = 5;
  int64 time_updated = 6;
}

message aml {}
message roava {}

message address {
  string flat_number = 1;
  string building_number = 2;
  string building_name = 3;
  string street = 4;
  string sub_street = 5;
  string town = 6;
  string state = 7;
  string postcode = 8;
  string country = 9;
}

message applicant {
  string application_id = 1;
  string applicant_id = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string dob = 6;
  address address = 7;
  string vendor = 8;
}