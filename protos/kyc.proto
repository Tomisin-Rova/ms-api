syntax = "proto3";
package kyc;
option go_package = "pb/kycService";

service KycService {
  rpc getApplicationByPersonId(PersonIdRequest) returns(application){}
  rpc startApplicationCDD(ApplicationIdRequest) returns(void){}
  // Proposing this is moved to ms.cdd // For the fully aggregated KYC + AML + Roava Internal Checklist result set.
  rpc awaitApplicationCDDResult(ApplicationIdRequest) returns(stream cdd){}
}

message void {}

message ApplicationIdRequest {
  string application_id = 1;
}

message PersonIdRequest {
  string person_id = 1;
}


message cdd {
  string id = 1;
  string person_id = 2;
  string applicant_id = 3;
  string status = 4;
  //  repeated tag tags = 5;
  //  repeated document documents = 6;
  int64 time_created = 5;
  int64 time_updated = 6;
}


message application {
  string id = 1;
  string person_id = 2;
  applicant applicant = 3;
  cdd cdd = 4;
  int64 time_created = 5;
  int64 time_updated = 6;
}

message address {
  string flat_number = 1;
  string building_number = 2;
  string building_name = 3;
  string street = 4;
  string sub_street = 5;
  string town = 6;
  string state = 7;
  string postcode = 8;
  string country = 9;
}

message applicant {
  string application_id = 1;
  string applicant_id = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string dob = 6;
  address address = 7;
  string vendor = 8;
}